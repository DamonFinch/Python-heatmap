name: Publish Python üêç distributions üì¶ to PyPI and TestPyPI
on: 
	push:
		branches: [ "main" ]
	pull_request:
		branches: [ "main" ]
jobs:
  build-n-publish:
		name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
		runs-on: ubuntu-latest
		strategy:
			fail-fast: false
			matrix:
				python-version: '3.x'
	
		steps:
		- uses: actions/checkout@v3
		- name: Set up Python ${{ matrix.python-version }}
		  uses: actions/setup-python@v3
		  with:
				python-version: ${{ matrix.python-version }}
	
		- name: Install dependencies
			run: |
				python -m pip install --upgrade pip
				python -m pip install flake8 pytest
				python -m pip install build --user
				if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
				
		- name: Lint with flake8
			run: |
				# stop the build if there are Python syntax errors or undefined names
				flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
				# exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
				flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
		
		- name: Test with pytest
			run: |
				pytest
		
		- name: Build a binary wheel and a source tarball
			run: |
				python -m build --sdist --wheel --outdir dist/ .
				
		- name: Publish distribution to Test
			uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
			with:
				user: __token__
				password: ${{ secrets.TEST_PYPI_API_TOKEN }}
				repository_url: https://test.pypi.org/legacy/

		- name: Publish distribution üì¶ to PyPI
			if: startsWith(github.ref, 'refs/tags')
			uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
			with:
				user: __token__
				password: ${{ secrets.PYPI_API_TOKEN }}
