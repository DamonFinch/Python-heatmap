library(ComplexHeatmap)
pwd
ls
# Only use GEO dataset
# data2 = read.table(sprintf("%s/20220119_GSE173330_Mammal40_inferred_species.txt",datadir),header=T,row.names=1,sep='\t') # don't need to run this for version of 20220119
# data <- rbind(data1,data2)
data <- data[! is.na(data$auc),]
# Only use GEO dataset
# data2 = read.table(sprintf("%s/20220119_GSE173330_Mammal40_inferred_species.txt",datadir),header=T,row.names=1,sep='\t') # don't need to run this for version of 20220119
# data <- rbind(data1,data2)
data <- data[! is.na(data$auc),]
data = read.table(sprintf("%s/20220119_GEO_Mammal40_inferred_species.txt",datadir),header = T,row.names=1,sep='\t')
library(circlize)
# Only use GEO dataset
# data2 = read.table(sprintf("%s/20220119_GSE173330_Mammal40_inferred_species.txt",datadir),header=T,row.names=1,sep='\t') # don't need to run this for version of 20220119
# data <- rbind(data1,data2)
data <- data[! is.na(data$auc),]
data
data = read.table(sprintf("%s/20220119_GEO_Mammal40_inferred_species.txt",datadir),header = T,row.names=1,sep='\t')
datadir
datadir
library(pals)
library(readxl)
library(tidyverse)
library(ComplexHeatmap)
library(circlize)
library(RColorBrewer)
library(pals)
datadir="~/zhoulab/labprojects/20200228_Mouse_Array_Project/20210324_SeSAme_Wubin/data"
figdir="~/Gallery"
#20211120, do not use taxid to map the official species naem
# 20220119 run with new version of sesame, inferSpecies20220119
data = read.table(sprintf("%s/20220119_GEO_Mammal40_inferred_species.txt",datadir),header = T,row.names=1,sep='\t')
# Only use GEO dataset
# data2 = read.table(sprintf("%s/20220119_GSE173330_Mammal40_inferred_species.txt",datadir),header=T,row.names=1,sep='\t') # don't need to run this for version of 20220119
# data <- rbind(data1,data2)
data <- data[! is.na(data$auc),]
# rm(data1,data2)
sample.info = read_excel("~/zhoulab/labsamplesheets/2021/20210325_Mammal40_Merged_GEO_Steve_Wubin_samplesheets.xlsx",col_types='text') %>% select(GSE, Basename, NCBI_scientific_name, taxid, Tissue, Sex)
library(circlize)
library(RColorBrewer)
load(file = sprintf("%s/Mammal40Heatmap.rda",datadir))
sample.info <- sample.info[order(sample.info$Family),]
row.info <- row.info[order(row.info$Family),]
matrix <- matrix[row.info$common_names,sample.info$Basename]
print(dim(matrix)) #7 883
rows=c('large flying fox','greater horseshoe bat')
cols=rownames(sample.info[sample.info$Family %in% c('Pteropodidae','Rhinolophidae'),])
matrix1 <- matrix[rows,cols]
matrix1 <- apply(matrix1,2,function(x) {x==max(x)})
pter_samples <- rownames(sample.info[sample.info$Family=='Pteropodidae',]) #length=235
rhi_samples <- rownames(sample.info[sample.info$Family=='Rhinolophidae',]) #length=40
table(matrix1['large flying fox',pter_samples])
# FALSE  TRUE
#    58   177
table(matrix1['greater horseshoe bat',pter_samples])
# FALSE  TRUE
#   177    58
color_scheme <- as.data.frame(read_excel(sprintf("%s/20211204_mammal40_color_scheme.xlsx",datadir)))
species_col <- structure(color_scheme$HEX,names=color_scheme$Species)
color_scheme <- unique(color_scheme[,c('Family','FamilyHex')])
family_col <- structure(color_scheme$FamilyHex,names=color_scheme$Family)
tissue_col <- structure(c('#A40043','#00E5FF','#00BECC','#B2F8FF','#6CBF00','#FFCCEE','#1E9351','#B2F8FF'),names=c('Blood','Brain','Cerebellum','Cortex','Liver','Muscle','Skin','Striatum'))
rownames(matrix)[6] <- 'greater horseshoe\nbat'
rownames(row.info)[6] <- 'greater horseshoe\nbat'
row_ha <- HeatmapAnnotation(
Family=row.info[,'Family'],
which ='row',show_annotation_name = F,
col=list(Family=family_col),simple_anno_size_adjust = TRUE,
width=unit(3,'mm'),
show_legend = c(Family=F))
order_col <- structure(brewer.pal(name = "Set1", n = 3),names=unique(sample.info$Order))
success_rate_col <- colorRamp2(c(0.3, 0.65, 1), c("green", "white", "red"))
family_order <- sample.info[which(!duplicated(sample.info$Family)),'Family']
# display.brewer.all(type='all',n=10, exact.n=FALSE)
col_ha <- HeatmapAnnotation(
label=anno_mark(at = which(!duplicated(sample.info$Family)),
labels = family_order,
which='column',side='top',
labels_rot=45,link_height=unit(3,'mm'),
labels_gp = gpar(col=family_col[family_order],fontsize=12),
lines_gp = gpar(col=family_col[family_order])),
Reported=sample.info$Family,
Tissue=sample.info$Tissue,
SuccessRate=sample.info$SuccessRate,
col=list(Reported=family_col,SuccessRate=success_rate_col,Tissue=tissue_col),
show_legend = c(Reported = FALSE),simple_anno_size_adjust = TRUE,
annotation_name_side='left',simple_anno_size = unit(3.5,'mm'),
annotation_legend_param = list(SuccessRate=list(title_position = "leftcenter-rot")))
col <- colorRamp2(c(0,0.5,0.95,1),c("white", "cornflowerblue", "yellow", "red"))
#Scale matrix to range(0,1) by columns
matrix <- apply(matrix, MARGIN = 2, FUN = function(X) (X - min(X))/diff(range(X)))
head(matrix)
write.table(as.data.frame(matrix),file="~/Download/matrix.txt",sep='\t',quote = F)
write.table(as.data.frame(matrix),file="~/Downloads/matrix.txt",sep='\t',quote = F)
head(sample.info)
write.table(as.data.frame(sample.info),file="~/Downloads/cols.txt",sep='\t',quote = F)
head(row.info)
write.table(as.data.frame(row.info),file="~/Downloads/rows.txt",sep='\t',quote = F)
shiny::runApp('Projects/Github/KnowYourCG')
?tags$img
?tags
runApp('Projects/Github/KnowYourCG')
?img
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
?updateTabsetPanel
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
print(1,2)
runApp('Projects/Github/KnowYourCG')
?menuItem
?tabsetPanel
?switch
switch("a","a"=1,"b"=2)
switch("b","a"=1,"b"=2)
?updateTabItems
runApp('Projects/Github/KnowYourCG')
?observeEvent
?sidebarMenu
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
?tabItem
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
?column
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
length("")
strsplit("a\nb","\n")
a=strsplit("a\nb","\n")
length(a)
?strsplit
a=strsplit("a\nb","\n",fixed = T)
a
length(a)
a[0]
type(a)
class(a)
a
a[1]
a[1][1]
unlist(a)
length(unlist(a))
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
?menuItem
?updateTabItems
runApp('Projects/Github/KnowYourCG')
?menuItem
runApp('Projects/Github/KnowYourCG')
shiny::runApp('Projects/Github/KnowYourCG')
?dashboardHeader
runApp('Projects/Github/KnowYourCG')
?strong
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
?img
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
runApp('Projects/Github/KnowYourCG')
source("~/.active-rstudio-document", echo=TRUE)
mat
rownames(mat)
rownames(mat)[5]
library(ComplexHeatmap)
Heatmap(mat)
source("~/.active-rstudio-document", echo=TRUE)
library(ComplexHeatmap)
system.file("extdata", package = "ComplexHeatmap")
2^3
library(ComplexHeatmap)
library(readxl)
library(pals)
library(circlize)
load(file = sprintf("%s/strainSpecificManifest/wild_strain.rda",datadir))
library(tidyverse)
datadir
library(readxl)
library(tidyverse)
library(ComplexHeatmap)
library(circlize)
library(RColorBrewer)
library(pals)
datadir="~/zhoulab/labprojects/20200228_Mouse_Array_Project/20210324_SeSAme_Wubin/data"
figdir="~/Gallery"
datadir
load(file = sprintf("%s/strainSpecificManifest/wild_strain.rda",datadir))
# row_info <- row_info[!row_info$chr %in% c('chrX','chrY'),]
beta <- beta[rownames(row_info),rownames(col_info)]
snp <- snp[rownames(row_info),rownames(col_info)]
dim(beta)
dim(snp)
vc <- apply(snp,1,max)
snp <- snp[names(vc[vc==1]),]
beta <- beta[rownames(snp),]
row_info <- row_info[rownames(snp),]
print(dim(snp)) #16715    28; non specific: 28319    28
# col <- colorRamp2(c(0,0.2,0.5,0.8,1),c("blue",'lightblue','snow', "lightyellow", "yellow"))
col <- colorRampPalette(c("blue","yellow"))(10)
# read color scheme and define columns colormap
sheets <- readxl::excel_sheets("~/labsamplesheets/2021/ARCHIVE/20210503_Color_Scheme_Ethan.xlsx")
# read color scheme and define columns colormap
sheets <- readxl::excel_sheets(sprintf("%s/20210503_Color_Scheme.xlsx",datadir))
color_scheme <- lapply(sheets, function(X) as.data.frame(read_excel("~/labsamplesheets/2021/ARCHIVE/20210503_Color_Scheme_Ethan.xlsx", sheet = X)))
color_scheme <- lapply(sheets, function(X)
as.data.frame(read_excel(sprintf("%s/20210503_Color_Scheme.xlsx",datadir), sheet = X)))
names(color_scheme) <- sheets
structure(color_scheme['strain']$strain$HEX,names=color_scheme['strain']$strain$LABEL)
strain_col <- structure(c('#66AA9F','#8A6699','#D8A49C'),names=c('CAST_EiJ','MOLF_EiJ','PWK_PhJ'))
# tissue_col <- structure(c('chocolate','red','green','gray'),names=c('Frontal Lobe Brain','Liver','Spleen','Tail'))
tissue_col <- structure(color_scheme['tissue']$tissue[match(unique(col_info$Tissue),color_scheme['tissue']$tissue$TISSUE),'HEX'],names=unique(col_info$Tissue))
col_ha <- HeatmapAnnotation(
df=col_info[colnames(beta),c('Strain','Tissue')],
col=list(Strain=strain_col,Tissue=tissue_col),
show_legend = c(Strain=T,Tissue=T),
annotation_name_side='left',simple_anno_size_adjust = TRUE,
simple_anno_size = unit(3,'mm'))
tissue_col
head(beta)
dm(beta)
dim(beta)
write(beta,file="/Users/dingw1/Projects/Github/PyComplexHeatmap/comparison/beta.csv",sep="\t",quote=F)
write.table(beta,file="/Users/dingw1/Projects/Github/PyComplexHeatmap/comparison/beta.csv",sep="\t",quote = F)
col_ha <- HeatmapAnnotation(
df=col_info[colnames(beta),c('Strain','Tissue')],
col=list(Strain=strain_col,Tissue=tissue_col),
show_legend = c(Strain=T,Tissue=T),
annotation_name_side='left',simple_anno_size_adjust = TRUE,
simple_anno_size = unit(3,'mm'))
target_col <- structure(c('yellowgreen','orangered'), names = c(0,1))
snp_col <- structure(c('gray','black'), names = c(0,1))
# group_col <- structure(brewer.pal(name = "Set1", n = 6),names=unique(row_info$Group))
group_col <- structure(c('darkorange','skyblue','red','wheat','green','darkgray'),names=c('Artificial high meth. reading','Artificial low meth. reading','G-R','No Effect','R-G','Suboptimal hybridization'))
row_ha <- HeatmapAnnotation(which='row',
df=row_info[rownames(beta),c('Target','Group')],
col=list('Target'=target_col,'Group'=group_col),
show_legend = T,simple_anno_size_adjust = TRUE,
simple_anno_size = unit(3,'mm'))
col=colorRampPalette(c("blue","yellow"))(10)
pdf("~/Gallery/20230411_wild_beta.pdf",family = "Helvetica")
hm2 <- Heatmap(
as.matrix(beta),name='beta',
cluster_columns = T,cluster_rows = T,
cluster_row_slices = T,
show_column_dend = F,show_row_dend=F,
show_column_names = F,show_row_names = F,
clustering_method_columns = "ward.D2",clustering_distance_columns = "pearson",
clustering_method_rows = "ward.D2",clustering_distance_rows = "pearson",
top_annotation = col_ha,
left_annotation=row_ha,
row_split = row_info[,c('Target','Group')],row_gap = unit(0,'mm'),
column_split = col_info$Strain,column_gap=unit(0.2,'mm'),
row_title = NULL,column_title = NULL,
col=parula(n=9),
na_col = "gray",
width = unit(5, "cm"),height = unit(14,'cm'),
use_raster = T,raster_quality = 2)
ht <- draw(hm2)
dev.off()
head(row_info)
write.table(row_info,file="/Users/dingw1/Projects/Github/PyComplexHeatmap/comparison/df_row.csv",sep='\t',quote=F)
tissue_col
data=read.table("/Users/dingw1/Projects/Github/PyComplexHeatmap/comparison/beta.csv",sep="\t",row.names = 1)
beta=read.table("/Users/dingw1/Projects/Github/PyComplexHeatmap/comparison/beta.csv",sep="\t",row.names = 1)
head(beta)
beta=read.table("/Users/dingw1/Projects/Github/PyComplexHeatmap/comparison/beta.csv",sep="\t",row.names = 1,check.names = F)
head(beta)
dim(beta)
tissue_col <- structure(c("#00E5FF","#6CBF00","#007F19","#FF0000"),names=c('Frontal Lobe Brain','Liver','Tail','Spleen'))
strain_col <- structure(c('#66AA9F','#8A6699','#D8A49C'),names=c('CAST_EiJ','MOLF_EiJ','PWK_PhJ'))
col_ha <- HeatmapAnnotation(
df=col_info[colnames(beta),c('Strain','Tissue')],
col=list(Strain=strain_col,Tissue=tissue_col),
show_legend = c(Strain=T,Tissue=T),
annotation_name_side='left',simple_anno_size_adjust = TRUE,
simple_anno_size = unit(3,'mm'))
target_col <- structure(c('yellowgreen','orangered'), names = c(0,1))
snp_col <- structure(c('gray','black'), names = c(0,1))
# group_col <- structure(brewer.pal(name = "Set1", n = 6),names=unique(row_info$Group))
group_col <- structure(c('darkorange','skyblue','red','wheat','green','darkgray'),names=c('Artificial high meth. reading','Artificial low meth. reading','G-R','No Effect','R-G','Suboptimal hybridization'))
row_ha <- HeatmapAnnotation(which='row',
df=row_info[rownames(beta),c('Target','Group')],
col=list('Target'=target_col,'Group'=group_col),
show_legend = T,simple_anno_size_adjust = TRUE,
simple_anno_size = unit(3,'mm'))
source("~/Projects/Github/PyComplexHeatmap/comparison/heatmap.R", echo=TRUE)
system("pwd")
source("~/Projects/Github/PyComplexHeatmap/comparison/heatmap.R", echo=TRUE)
head(col_info)
write.table(col_info,file="/Users/dingw1/Projects/Github/PyComplexHeatmap/comparison/df_col.csv",sep="\t",quote = F)
